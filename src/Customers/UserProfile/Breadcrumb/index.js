import React from 'react';
import './styles.css';

function fwaiting(millis) {
  var minutes = Math.floor(millis / 60000);
  var seconds = ((millis % 60000) / 1000).toFixed(0);
  return minutes + ":" + (seconds < 10 ? '0' : '') + seconds;
}

const types = {
  'assigned': 'üë•',
  'reopen': 'üí´',
  'reject': 'üöΩ',
  'deal': 'üí∞',
  'note': 'üí¨',
  'created': 'üê£'
}

const getCommentText = ({ type, comment, amount, user, trunk, reason }) => {
  if (type === 'assigned') return '–ö–ª–∏–µ–Ω—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞'
  if (type === 'reopen') return '–û—Ç–∫—Ä—ã—Ç–∞ –Ω–æ–≤–∞—è —Å–¥–µ–ª–∫–∞'
  if (type === 'reject') return '–û—Ç–∫–∞–∑ –æ—Ç —Å–¥–µ–ª–∫–∏. –ü—Ä–∏—á–∏–Ω–∞ ‚Äî ' + (comment ? comment : reason)
  if (type === 'deal') return '–£—Å–ø–µ—à–Ω–∞—è —Å–¥–µ–ª–∫–∞. –°—É–º–º–∞ ‚Äî ' + amount + '.' + (comment ? comment : '')
  if (type === 'note') return comment
  if (type === 'created') {
    return '–ö–ª–∏–µ–Ω—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω ' + (user ?
      '–º–µ–Ω–µ–¥–∂–µ—Ä–æ–º' : '–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ –∑–≤–æ–Ω–∫—É –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫ ¬´' + trunk.name + '¬ª'
    )
  }
}

const Label = ({ date, type, user }) =>
  <div className="bCustomerBreadcrumb__label">
    {date}&nbsp;
    <span className="bCustomerBreadcrumb__divider"></span>&nbsp;
    {user ? user.name : '–ú–∞–π–Ω–¥—Å–µ–π–ª—Å'}&nbsp;&nbsp;{types[type]}
  </div>;

const Comment = params =>
  <div className="bCustomerBreadcrumb__comment">
    {getCommentText(params)}
  </div>;

export default ({ type, date, comment, amount, reason, user, trunk, previousStep }) =>
  <div className="bCustomerBreadcrumb">
    <Label type={type} date={date} user={user} />
    <Comment type={type} user={user} comment={comment}
      amount={amount} trunk={trunk} reason={reason} />
  </div>;
